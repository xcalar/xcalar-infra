---
min_packer_version: '1.6.4'
variables:
  aws_access_key: '{{env `AWS_ACCESS_KEY_ID`}}'
  aws_secret_key: '{{env `AWS_SECRET_ACCESS_KEY`}}'
  baseos_owner: '137112412989'
  baseos: 'amzn2-ami-'
  build_number: '{{env `BUILD_NUMBER`}}'
  image_build_number: '{{env `IMAGE_BUILD_NUMBER`}}'
  description: Xcalar Cloud Base Image
  destination_regions: '{{env `REGIONS`}}'
  device_name: /dev/xvda
  disk_size: '10'
  home: '{{env `HOME`}}'
  installer_build_number: '1'
  installer: '{{env `INSTALLER`}}'
  installer_url: '{{env `INSTALLER_URL`}}'
  installer_version: '1.0'
  installer_tag: ''
  project: '{{env `PROJECT`}}'
  product: '{{env `PRODUCT`}}'
  region: '{{env `AWS_DEFAULT_REGION`}}'
  shared_with: '{{env `SHARED_WITH`}}'
  ssh_username: ec2-user
  today: '{{isotime "20060102"}}'
  uid: '1000'
  release: '{{env `RELEASE`}}'
  manifest: '{{template_dir}}/packer-manifest.json'
  pip_bundle_base_url: 'https://storage.googleapis.com/repo.xcalar.net/deps/pip-bundler'
builders:
  - type: amazon-ebs
    name: amazon-ebs-amzn2
    access_key: '{{user `aws_access_key`}}'
    secret_key: '{{user `aws_secret_key`}}'
    #vault_aws_engine:
    #  name: "packer"
    #  engine_name: aws-xcalar
    #  ttl: "3600s"
    ssh_keypair_name: 'packer'
    ssh_private_key_file: '{{template_dir}}/../ssh/id_packer.pem'
    region: '{{user `region`}}'
    ami_regions: '{{user `destination_regions`}}'
    ami_users: '{{user `shared_with`}}'
    source_ami_filter:
      filters:
        virtualization-type: hvm
        architecture: 'x86_64'
        root-device-type: ebs
        block-device-mapping.volume-type: gp2
        name: '{{user `baseos`}}*'
      owners: '{{user `baseos_owner`}}'
      most_recent: true
    instance_type: c5d.xlarge
    iam_instance_profile: ec2-default
    ssh_username: '{{user `ssh_username`}}'
    ssh_pty: true
    ena_support: true
    ebs_optimized: true
    force_deregister: true
    force_delete_snapshot: true
    shutdown_behavior: terminate
    ami_name: '{{user `project`}}-{{user `product`}}-{{split build_name "-" 2}}-{{user `installer_version`}}-{{user `today`}}'
    ami_description: '{{user `description`}} {{split build_name "-" 2 | upper}} ({{user `installer_version`}}-{{user `installer_build_number`}} ({{user `today`}}))'
    run_tags:
      Name: 'packer-{{build_name}}-{{user `project`}}-{{split build_name "-" 2}}-{{user `installer_tag`}}-{{user `installer_build_number`}}'
    snapshot_tags:
      Name: '{{user `project`}}-{{user `product`}}-{{split build_name "-" 2}}-{{user `installer_version`}}-{{user `today`}}'
      SourceAMI: '{{.SourceAMI}}'
      SourceAMIName: '{{.SourceAMIName}}'
      OSID: '{{split build_name "-" 2}}'
      Version: '{{split .SourceAMIName "-" 3}}'
      Build: '{{user `installer_build_number`}}'
      Today: '{{user `today`}}'
      Product: '{{user `product`}}'
      Project: '{{user `project`}}'
    tags:
      AMIName: '{{user `project`}}-{{user `product`}}-{{split build_name "-" 2}}-{{user `installer_version`}}-{{user `today`}}'
      Name: '{{user `project`}}-{{user `product`}}-{{split build_name "-" 2}}-{{user `installer_version`}}-{{split .SourceAMIName "-" 3}}-{{user `today`}}'
      SourceAMI: '{{.SourceAMI}}'
      SourceAMIName: '{{.SourceAMIName}}'
      SourceAMIVersion: '{{split .SourceAMIName "-" 3}}'
      OSID: '{{split build_name "-" 2}}'
      Version: '{{user `installer_version`}}'
      Build: '{{user `installer_build_number`}}'
      Today: '{{user `today`}}'
      Product: '{{user `product`}}'
      Project: '{{user `project`}}'
    launch_block_device_mappings:
      - device_name: '{{user `device_name`}}'
        volume_size: '{{user `disk_size`}}'
        volume_type: gp2
        delete_on_termination: true
    ami_block_device_mappings:
      - device_name: /dev/sdb
        virtual_name: ephemeral0
      - device_name: /dev/sdc
        virtual_name: ephemeral1
provisioners:
  - type: shell
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    expect_disconnect: true
    inline:
      - set -x
      - yum remove -y java-1.7.0-openjdk-headless java-1.7.0-openjdk awscli python2.6
      - ln -sfn /usr/bin/python2.7 /usr/bin/python2
      - yum install -y python3-devel python3-minimal
      - curl -fL https://bootstrap.pypa.io/get-pip.py | python3
      - yum update -y --exclude kernel
      - amazon-linux-extras install -y kernel-ng
      - while pgrep -af '[d]racut'; do sleep 1; done
      - systemctl reboot
      - exit 0
  - type: shell
    pause_before: '20s'
    environment_vars:
      - OSID={{split build_name "-" 2}}
      - CLOUD=aws
      - INSTALLER_URL={{user `installer_url`}}
      - PIP_BUNDLE_BASE_URL={{user `pip_bundle_base_url`}}
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    scripts:
      - '{{ template_dir }}/../scripts/start.sh'
      - '{{ template_dir }}/../scripts/install-epel.sh'
      - '{{ template_dir }}/../scripts/install-java8.sh'
      - '{{ template_dir }}/../scripts/packages-amzn.sh'
      - '{{ template_dir }}/../scripts/install-xcalar.sh'
      - '{{ template_dir }}/../scripts/fixup-jupyter.sh'
      - '{{ template_dir }}/../scripts/install-docker.sh'
  - type: shell
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    inline:
      - set -x
      - set +e
      - yum remove -y xcalar-platform xcalar || true
      - source /etc/profile.d/zjava.sh || true
      - test -x $JAVA_HOME/bin/java || exit 1
      - yum clean all --enablerepo='*'
      - rm -rfv /var/cache/yum/* /var/tmp/yum*
  - type: shell
    environment_vars:
      - OSID={{split build_name "-" 2}}
      - CLOUD=aws
    execute_command: '{{.Vars}} /usr/bin/sudo -H -E bash ''{{.Path}}'''
    scripts:
      - '{{ template_dir }}/../scripts/finish.sh'
post-processors:
  - type: manifest
    output: '{{user `manifest`}}'
    strip_path: true
    custom_data:
      destination_regions: '{{user `destination_regions`}}'
      installer_build_number: '{{user `installer_build_number`}}'
      installer_url: '{{user `installer_url`}}'
      installer_version: '{{user `installer_version`}}'
      license: '{{user `license`}}'
      product: '{{user `product`}}'
      project: '{{user `project`}}'
      release: '{{user `release`}}'
      region: '{{user `region`}}'
      shared_with: '{{user `shared_with`}}'
      today: '{{user `today`}}'

