variables:
  today: '{{ isotime "20060102" }}'
  http_proxy: '{{ env `http_proxy` }}'
  https_proxy: '{{ env `https_proxy` }}'
  no_proxy: '{{ env `no_proxy` }}'
  role: jenkins_slave
  cluster: jenkins-swarm
  datacenter: xcalar-sjc
  ts: '{{ timestamp }}'
  osid: el7
  cacher_ip: '{{ env `CACHER_IP` }}'
  #iso_url: el7-packages-qemu/tdhtest
  iso_url: http://netstore/images/el7-base-qemu.qcow2
  iso_checksum: 'md5:c725eab04431dcc046719c92888d5c5e'
  headless: "true"
  home: '{{env `HOME`}}'
  puppet_src: '{{env `PUPPET_SRC`}}'
  puppet_host: 'puppet'
  puppet_sha1: '{{env `PUPPET_SHA1`}}'
  domain: 'int.xcalar.com'
  disk_size: "128000"
  build_number: '{{env `BUILD_NUMBER`}}'
  environment: 'production'
  output_directory: null
  vm_name: 'run-puppet'
  mirrorurl: 'http://netstore/isos/centos/7'
  manifest: '{{template_dir}}/packer-manifest.json'
builders:
  - type: qemu
    name: "{{user `osid`}}-{{user `role`}}-qemu"
    accelerator: kvm
    iso_url: '{{ user `iso_url` }}'
    iso_checksum: '{{ user `iso_checksum` }}'
    output_directory: '{{build_name}}'
    disk_size: '{{user `disk_size`}}'
    disk_image: true
    use_backing_file: true
    format: qcow2
    headless: "{{user `headless`}}"
    http_directory: httpdir
    host_port_min: 10080
    host_port_max: 10280
    ssh_username: root
    ssh_password: Welcome1
    ssh_port: 22
    ssh_wait_timeout: 900s
    vm_name: '{{user `vm_name`}}'
    net_device: virtio-net
    disk_interface: virtio
    vnc_bind_address: 0.0.0.0
    memory: 2048
    cpus: 2
    qemuargs:
      - - "-serial"
        - "mon:stdio"
    #    qemuargs:
    #      - - -netdev
    #        - user,hostfwd=tcp::{{ .SSHHostPort }}-:22,id=forward
    #      - - -device
    #        - virtio-net,netdev=forward,id=net0
    #      - - -m
    #        - 2048
    #      - - -smp
    #        - 2
    #
provisioners:
  - type: shell-local
    inline:
      - ulimit -Ss 8192; cd {{ user `puppet_src` }} && make puppet.tar.gz
  - type: shell
    inline:
      - mkdir /tmp/scripts

  - type: file
    source: "{{ user `puppet_src` }}/puppet.tar.gz"
    destination: /tmp/scripts/
    generated: true

  - type: file
    source: "{{ template_dir }}/../scripts/run-puppet.sh"
    destination: /tmp/scripts/

  - type: file
    source: "{{ template_dir }}/../scripts/cloud-init-nocloud.sh"
    destination: /tmp/scripts/

  - type: file
    source: "{{ template_dir }}/../scripts/{{user `osid`}}-build.sh"
    destination: /tmp/scripts/

  - type: file
    source: "{{ template_dir }}/../scripts/centos-updates.sh"
    destination: /tmp/scripts/

  - type: shell
    environment_vars:
      - "PS4=# ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]}() - [${SHLVL},${BASH_SUBSHELL},$?] "
      - OSID={{user `osid`}}
      - http_proxy={{user `http_proxy`}}
      - https_proxy={{user `https_proxy`}}
      - no_proxy={{user `no_proxy`}}
      - FACTER_role={{user `role`}}
      - FACTER_cluster={{user `cluster`}}
      - FACTER_packer=1
      - FACTER_datacenter={{user `datacenter`}}
      - CACHER_IP={{user `cacher_ip`}}
      - MYHOSTNAME={{user `vm_name`}}.{{user `domain`}}
      - PUPPET_TAR=/tmp/scripts/puppet.tar.gz
      - FACTER_override=offline
      - EL7_MIRROR_URL={{user `mirrorurl`}}
      - XCALAR_PYTHON_VERSION=3.6.11-150
      - XCALAR_ARROW_VERSION=0.13.0-8
      - XCALAR_THRIFT_VERSION=0.10.0-28
      - XCALAR_PROTOBUF_VERSION=3.11.2
      - XCALAR_DOCKER_VERSION=19.03.8
      - XCALAR_CLANG_VERSION=5
      - XCALAR_TESTDATA_VERSION=2.0.5-10
      - XCALAR_GRPC_VERSION=1.28.1-4
      - XCALAR_REPOPKG_URL=http://repo.xcalar.net
      - XCALAR_REPOPKG_ORG=http://repo.xcalar.net
      - CONTAINER_UID=1000
      - CONTAINER_GID=1000
      - CONTAINER_USER=jenkins
      - CONTAINER_HOME=/home/jenkins
      - LIBARCHIVE_VERSION=3.3.1-12.el7
      - NOCOLOR=1
    execute_command: chmod +x {{ .Path }}; {{ .Vars }} {{.Path}}
    inline:
      - set -x
      - curl -fsSL $EL7_MIRROR_URL/centos-mirror.repo -o /etc/yum.repos.d/centos-mirror.repo && echo $EL7_MIRROR_URL > /etc/yum/vars/mirrorurl
      - yum install -y git222-core
      - cd /tmp/scripts
      - mkdir puppet
      - tar zxf puppet.tar.gz -C puppet
      - yum clean all --enablerepo='*' && rm -rf /var/cache/yum/*
      - bash -x run-puppet.sh
      - bash -x cloud-init-nocloud.sh
      - echo "[main]" > /etc/puppetlabs/puppet/puppet.conf
      - echo "server = {{user `puppet_host`}}.{{user `domain`}}" >> /etc/puppetlabs/puppet/puppet.conf
      - if [ "{{user `environment`}}" != "production" ]; then echo "environment = {{user `environment`}}" >> /etc/puppetlabs/puppet/puppet.conf; fi

  - type: shell
    inline:
      - rm -rf /tmp/scripts
      - rm -rf /etc/puppetlabs/code

  - type: shell
    environment_vars:
      - NODISABLE=puppet
    execute_command: chmod +x {{ .Path }}; {{ .Vars }} {{.Path}}
    script: '{{ template_dir }}/../scripts/generalize.sh'
    expect_disconnect: true
    skip_clean: true

post-processors:
  - type: compress
    format: gz
    keep_input_artifact: false
    output: '{{user `output_directory`}}/{{user `vm_name`}}.gz'
  - type: manifest
    output: '{{user `manifest`}}'
    strip_path: true
    custom_data:
      build_number: '{{user `build_number`}}'
      cluster: '{{user `cluster`}}'
      datacenter: '{{user `datacenter`}}'
      iso_checksum: '{{user `iso_checksum`}}'
      iso_url: '{{user `iso_url`}}'
      osid: '{{user `osid`}}'
      output_directory: '{{user `output_directory`}}'
      puppet_sha1: '{{user `puppet_sha1`}}'
      role: '{{user `role`}}'
      today: '{{user `today`}}'
      output: '{{user `output_directory`}}/{{user `vm_name`}}.gz'
