#!/bin/bash
# DO NOT EDIT! THIS FILE IS AUTOGENERATED BY bin/docker2bash.sh!
# Make your changes to $XLRDIR/Dockerfile and run build config to
# generate this file and submit it with your Dockerfile changes

DOCKERPWD=$PWD
DOCKERUSER="`id -un`"
SRCDIR=$PWD
if [ `id -u` -ne 0 ]; then sudo "$0" "$@"; exit $?; fi
if [ -z "$APT_PROXY" ]; then echo >&2 "WARNING: \$APT_PROXY not specified in the environment!"; fi
if [ -z "$CONTAINER_USER" ]; then echo >&2 "WARNING: \$CONTAINER_USER not specified in the environment!"; export CONTAINER_USER=jenkins; fi
if [ -z "$CONTAINER_UID" ]; then echo >&2 "WARNING: \$CONTAINER_UID not specified in the environment!"; export CONTAINER_UID=1000; fi
rm -f /etc/profile.d/buildenv.sh
set -ex
# FROM ubuntu:trusty
# MAINTAINER Xcalar <info@xcalar.com>

# ARG APT_PROXY
echo export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64 | tee -a /etc/profile.d/buildenv.sh && source /etc/profile.d/buildenv.sh

cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get update -yqq && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get upgrade -yqq && DEBIAN_FRONTEND=noninteractive http_proxy=$APT_PROXY apt-get install --no-install-recommends -yqq gcc sg3-utils openssh-server git pmccabe fio sysstat iotop nmap traceroute valgrind strace libtool m4 wget zip unzip doxygen libc6-dbg iperf g++ htop exuberant-ctags zlib1g-dev libeditline-dev libbsd-dev autoconf automake libncurses5-dev devscripts ispell ccache libboost1.55-all-dev libssl-dev libglib2.0-dev libpython2.7-dev libjansson4 libjansson-dev make linux-tools-common linux-tools-generic phantomjs apache2 jq nfs-common mysql-client mysql-server libmysqlclient-dev libevent-dev libboost-test1.55-dev dictionaries-common uuid-dev pxz xz-utils realpath wamerican lcov python-pip dpkg-dev gawk libcrypto++9 libcrypto++-dev cmake libxml2 libxml2-dev libkrb5-dev krb5-user libgsasl7-dev uuid-dev debhelper librpm3 librpmbuild3 rpm flex bison gdb python2.7-dbg ruby ruby-dev ruby-bundler libruby curl vim-nox bash-completion bc libarchive-dev python-lxml libxslt1-dev libxslt1.1 libsnappy1 libsnappy-dev rsync fakeroot patchutils software-properties-common openjdk-7-jdk || exit $?
cd $DOCKERPWD && add-apt-repository -y ppa:george-edison55/cmake-3.x || exit $?
cd $DOCKERPWD && curl -sSL https://deb.nodesource.com/setup_6.x | bash || exit $?
cd $DOCKERPWD && curl -sL http://repo.xcalar.net/pubkey.gpg | apt-key add - || exit $?
cd $DOCKERPWD && curl -sL http://repo.xcalar.net/xcalar-release-trusty.deb > /tmp/xcalar-release-trusty.deb && dpkg -i /tmp/xcalar-release-trusty.deb && rm -f /tmp/xcalar-release-trusty.deb || exit $?
cd $DOCKERPWD && DEBIAN_FRONTEND=noninteractive apt-get update -yqq && DEBIAN_FRONTEND=noninteractive apt-get install -yqq --no-install-recommends nodejs thrift-dev=0.9.2-3 libjemalloc-dev libprotobuf-dev=3.0.2-2 protobuf-compiler=3.0.2-2 libprotobuf10=3.0.2-2 ccache cmake || exit $?
cd $DOCKERPWD && curl -sSL http://repo.xcalar.net/deps/ninja-1.7.2-1.tar.gz | tar zxf - --no-same-owner -C /usr/local/bin && ln -sfn ninja-1.7.2 /usr/local/bin/ninja || exit $?

curl -sSL http://repo.xcalar.net/deps/xcalar-build-context-1487745549.tar.gz | (tar zxf - --no-same-owner -C $SRCDIR)
for data in flight gdelt-small indexJoin yelp; do curl --retry 5 -sSL http://repo.xcalar.net/data/${data}.tar.gz | tar zxf - --no-same-owner -C /var/tmp || true; done || true

cd $SRCDIR && cp ./bin/npm-install.py /usr/bin && cd - || exit $?
cd $SRCDIR && cp ./docker/ub14/ub14-build/package.json /usr/src && cd - || exit $?
cd $DOCKERPWD && npm-install.py -p /usr/src/package.json || exit $?

cd $DOCKERPWD && groupadd --non-unique --force --gid 999 docker || exit $?
cd $DOCKERPWD && for pkg in less grunt-cli uglify-js; do npm install -g $pkg; done || exit $?


cd $DOCKERPWD && printf 'source %s\n\ngem %s' "'https://rubygems.org'" "'fpm'" > /tmp/Gemfile && cd /tmp && bundle install && rm /tmp/Gemfile || exit $?
DOCKERPWD="/usr/src"

## Remove .so's of libs that we depend on but don't ship with the distro.
## Since we don't dynamically link against these anymore, we don't need to worry about shipping their packages.
cd $DOCKERPWD && echo 'add-auto-load-safe-path /' | tee -a /etc/gdb/gdbinit || exit $?
#
cd $DOCKERPWD && echo '%sudo ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/99-sudo && chmod 0440 /etc/sudoers.d/99-sudo || exit $?

cd $SRCDIR && cp ./requirements.txt /usr/src/ && cd - || exit $?
cd $DOCKERPWD && pip install -U pip && pip install -r ./requirements.txt || exit $?

cd $SRCDIR && cp ./bin/osid /usr/local/bin/ && cd - || exit $?
cd $SRCDIR && cp ./bin/install-clang.sh /usr/local/bin/ && cd - || exit $?
cd $DOCKERPWD && /usr/local/bin/install-clang.sh || exit $?

cd $SRCDIR && cp -a ./conf/xcalar-sysctl.conf /etc/sysctl.d/90-xcsysctl.conf && cd - || exit $?
cd $SRCDIR && cp -a ./conf/xcalar-limits.conf /etc/security/limits.d/90-xclimits.conf && cd - || exit $?
cd $SRCDIR && cp -a ./conf/xcalar-logrotate.conf /etc/logrotate.d/xclogrotate && cd - || exit $?
cd $SRCDIR && cp -a ./conf/xcalar-rsyslog.conf   /etc/rsyslog.d/90-xcrsyslog.conf && cd - || exit $?

# ARG CONTAINER_USER
# ARG CONTAINER_UID

cd $DOCKERPWD && if [ -n "$CONTAINER_USER" ]; then usermod -aG sudo,docker,disk $CONTAINER_USER; fi || exit $?
cd $DOCKERPWD && mkdir -p /var/log/xcalar /var/opt/xcalar /var/opt/xcalarTest /var/tmp/xcalar /var/tmp/xcalarTest && chown $CONTAINER_UID /var/opt/xcalar* /var/tmp/xcalar* /var/log/xcalar || exit $?

# EXPOSE 80 443 5000 18552 8000

# CMD ["/bin/bash","-l"]
#Entrypoint CMD
#  "/bin/bash" "-l"
