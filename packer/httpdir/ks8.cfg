lang en_US.UTF-8
keyboard us
timezone America/Los_Angeles --isUtc
auth --passalgo=sha512 --useshadow
rootpw $1$nPUZ8vkj$8FSzp68m.fnsxq2FfaIC5/ --iscrypted
#platform x86, AMD64, or Intel EM64T
reboot
text
%include /tmp/network.ks
#network --device eth0 --bootproto dhcp --hostname localhost.localdomain
url --url=http://10.10.2.136/isos/rhel/8/
bootloader --location=mbr --append="crashkernel=auto net.ifnames=0 biosdevname=0 spectre_v2=off nopti"
zerombr
clearpart --all --initlabel
part /boot --fstype=ext4 --size=500
part pv.01 --size=1024 --grow
#part pv.01 --mkfsoptions "-n ftype=1"  --size=1024 --grow
volgroup centos pv.01
logvol swap --vgname=centos --fstype=swap --size=32768 --name=swap
logvol / --vgname=centos --fstype=xfs --size=10000 --grow --name=root
selinux --enforcing
firewall --enabled --http --ssh
skipx
firstboot --disable


## PACKAGES
%packages
@standard
curl
sudo
openssh-clients
openssh-server
%end
repo --name=appstream --baseurl=http://10.10.2.136/isos/rhel/8/AppStream/


## PRE
%pre
#!/bin/sh

echo "network --device eth0 --bootproto dhcp" > /tmp/network.ks # --hostname localhost.localdomain" > /tmp/network.ks
echo "user --name=jenkins --uid=1000 --shell=/bin/bash" > /tmp/owner.ks

for x in `cat /proc/cmdline`; do
  case $x in
    SERVERNAME*)
      eval $x
      echo "network --device eth0 --bootproto dhcp --hostname ${SERVERNAME}" > /tmp/network.ks
      ;;
    ROLE*)
      eval $x
      mkdir -p /etc/facter/facts.d
      echo "role=$ROLE" > /etc/facter/facts.d/role.txt
      ;;
    OWNER*)
      eval $x
      echo "user --name=$OWNER --uid=1000 --shell=/bin/bash" > /tmp/owner.ks
      ;;
  esac
done

%end

%post
#!/bin/sh

#echo "network --device eth0 --bootproto dhcp" > /tmp/network.ks
#echo "user --name=jenkins --uid=1000 --shell=/bin/bash" > /tmp/owner.ks

ROLE=jenkins_slave
CLUSTER=jenkins-slave
OWNER=jenkins

for x in `cat /proc/cmdline`; do
  case $x in
    ROLE*)
      eval $x
      ;;
    CLUSTER*)
      eval $x
      ;;
    OWNER*)
      eval $x
      ;;
  esac
done
echo "%$OWNER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/$OWNER
chmod 0440 /etc/sudoers.d/$OWNER
mkdir -m 0700 /root/.ssh /home/$OWNER/.ssh
curl -sSL http://repo.xcalar.net/xcalar.pub > /root/.ssh/authorized_keys
curl -sSL http://repo.xcalar.net/xcalar.pub > /home/$OWNER/.ssh/authorized_keys
chmod 0600 /root/.ssh/authorized_keys /home/$OWNER/.ssh/authorized_keys
chown -R $OWNER:$OWNER /home/$OWNER

sed -i "s/^\(.*requiretty\)$/#\1/" /etc/sudoers
# keep proxy settings through sudo
echo 'Defaults env_keep += "http_proxy https_proxy no_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY RSYNC_PROXY NO_PROXY"' >> /etc/sudoers

subscription-manager register --auto-attach --username=devaccounts@xcalar.com --password=PbLTa9g4+b7ZWfydLY6q

subscription-manager repos --enable=rhel-8-for-x86_64-baseos-rpms
subscription-manager repos --enable=rhel-8-for-x86_64-appstream-rpms
subscription-manager repos --enable=rhel-8-for-x86_64-supplementary-rpms
subscription-manager repos --enable=ansible-2.8-for-rhel-8-x86_64-rpms
yum localinstall -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm || \
    yum localinstall -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
/etc/init.d/sshd restart
echo 'deltarpm = 0' >> /etc/yum.conf
echo 'proxy = http://cacher:3128' >> /etc/yum.conf
yum install -y "http://yum.puppetlabs.com/puppet6-release-el-${ELV}.noarch.rpm"
yum install -y puppet-agent
yum update -y
mkdir -p /etc/facter/facts.d
echo "role=$ROLE" > /etc/facter/facts.d/role.txt
echo "cluster=$CLUSTER" > /etc/facter/facts.d/cluster.txt
set +e
/opt/puppetlabs/bin/puppet agent -t -v
/opt/puppetlabs/bin/puppet agent -t -v
/opt/puppetlabs/bin/puppet agent -t -v

%end
