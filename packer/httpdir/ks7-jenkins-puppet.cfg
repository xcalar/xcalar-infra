# CentOS 7.x kickstart file - ks7.cfg
#
# For more information on kickstart syntax and commands, refer to the
# CentOS Installation Guide:
# https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Installation_Guide/sect-kickstart-syntax.html
#
# For testing, you can fire up a local http server temporarily.
# cd to the directory where this ks.cfg file resides and run the following:
#    $ python -m SimpleHTTPServer
# You don't have to restart the server every time you make changes.  Python
# will reload the file from disk every time.  As long as you save your changes
# they will be reflected in the next HTTP download.  Then to test with
# a PXE boot server, enter the following on the PXE boot prompt:
#    > linux text ks=http://<your_ip>:8000/ks.cfg

# Required settings
lang en_US.UTF-8
keyboard us

# Generate the salted hashed pw like this:
# echo 'import crypt,getpass; print crypt.crypt(getpass.getpass(), "$6$'$(</dev/urandom tr -dc A-Za-z0-9 | head -c 16)'")' | python -
rootpw --iscrypted $6$uMZ9kMS3RDf783lc$rId26T/g1.ZphgEqUV5k6zpozCWSOTz8BN4w0aozb56BYI2ICrlhvbFgGOrrRj1pVg/6B4kjCDeF0ms1S0imh/
authconfig --enableshadow --passalgo=sha512
timezone America/Los_Angeles

# Optional settings
install
cdrom
group --name=docker --gid=999
user --name=jenkins --uid=1000 --shell=/bin/bash --password $6$Q4WSvg8gOni9Gydk$p4D0phxEBipgNOwxp0IdmmRlpVykXDHLGL7MAaXUV/ZX9/ivKSsfY6EdyM190pIwS79.prkeenIwnbmPg4/NF0
unsupported_hardware
network --device eth0 --bootproto dhcp
%include /tmp/network.ks
firewall --disabled
selinux --disabled

text
skipx
zerombr
clearpart --all --initlabel
bootloader --location=mbr --append "console=ttyS0,115200n8 console=tty0 net.ifnames=0 biosdevname=0 elevator=noop"
part /boot --fstype=ext4 --size=500
part swap --size=8192
part pv.01  --size=1024 --grow
volgroup vg00 pv.01
logvol / --vgname=vg00 --fstype=xfs --size=10000 --grow --name=lv_root
firstboot --disabled
reboot

%packages --nobase --ignoremissing --excludedocs
#@base
@core
# vagrant needs this to copy initial files via scp
openssh-clients
openssh-server
# Prerequisites for installing VMware Tools or VirtualBox guest additions.
# Put in kickstart to ensure first version installed is from install disk,
# not latest from a mirror.
kernel-headers
kernel-devel
gcc
make
#perl
curl
#wget
bash
bzip2
#dkms
patch
net-tools
git
# Core selinux dependencies installed on 7.x, no need to specify
# Other stuff
sudo
nfs-utils
# open-vm-tools
java-1.8.0-openjdk-headless
epel-release
-fprintd-pam
-intltool

# unnecessary firmware
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw*-firmware
-irqbalance
-ivtv-firmware
-iwl*-firmware
-libertas-usb8388-firmware
-ql*-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
%end

%pre
#!/bin/sh

echo "network --device eth0 --bootproto dhcp --hostname localhost.localdomain" > /tmp/network.ks

for x in `cat /proc/cmdline`; do
  case $x in
    SERVERNAME*)
      eval $x
      echo "network --device eth0 --bootproto dhcp --hostname ${SERVERNAME}" > /tmp/network.ks
      ;;
  esac
done

%end

%post
#!/bin/sh

echo "%jenkins ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers.d/jenkins
chmod 0440 /etc/sudoers.d/jenkins
sed -i "s/^\(.*requiretty\)$/#\1/" /etc/sudoers
# keep proxy settings through sudo
echo 'Defaults env_keep += "http_proxy https_proxy ftp_proxy rsync_proxy no_proxy HTTP_PROXY HTTPS_PROXY FTP_PROXY RSYNC_PROXY NO_PROXY"' >> /etc/sudoers
/etc/init.d/sshd restart
yum -y update
yum clean all --enablerepo='*'
rm -rf /var/cache/yum/*
mkdir -p /etc/facter/facts.d
for x in `cat /proc/cmdline`; do
  case $x in
    ROLE*)
      eval $x
      echo "role=$ROLE" > /etc/facter/facts.d/role.txt
      ;;
    CLUSTER*)
      eval $x
      echo "cluster=$CLUSTER" > /etc/facter/facts.d/cluster.txt
      ;;
  esac
done

if [ -n "$ROLE" ] || [ -n "$CLUSTER" ]; then
    ELVERSION="$(rpm -q $(rpm -qf /etc/redhat-release) --queryformat '%{VERSION}\n' | cut -c1)"
    yum install -y "http://yum.puppetlabs.com/puppetlabs-release-pc1-el-${ELVERSION}.noarch.rpm"
    yum install -y puppet-agent
    yum update -y
    set +e
    /opt/puppetlabs/bin/puppet agent -t -v
    /opt/puppetlabs/bin/puppet agent -t -v
fi
%end
