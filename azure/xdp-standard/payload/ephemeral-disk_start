#!/bin/bash
set -e

[ ! -r /etc/default/ephemeral-disk ] && exit 1

. /etc/default/ephemeral-disk

disks_list=""
partitions_list=""
partitions_count=0
oldIFS=$IFS
IFS=','
for disk in $DISKS; do
    disks_list="$disks_list $disk"
    partitions_list="$partitions_list ${disk}1"
    partitions_count=$((partitions_count + 1))
done
IFS=$oldIFS
disks_list=${disks_list## }
partitions_list=${partitions_list## }

pvscan -v --cache --activate ay || true

LV_DISK="/dev/$VG_NAME/$LV_DATA"

if [ ! -b "$LV_DISK" ]; then
    echo "Wiping disk(s) ${disks_list[*]} ..."
    wipefs -faq ${disks_list[*]}

    for disk in $disks_list; do
        echo "Partitioning disk $disk ..."
        parted --script "$disk" mklabel gpt
        parted --script --align optimal "$disk" mkpart primary ext2 2048s 100%

        if [ "$ENABLE_MD" -eq "1" ]; then
            echo "Enabling partition RAID flag ..."
            parted --script "$disk" set 1 raid on
        else
            echo "Enabling partition LVM flag ..."
            parted --script "$disk" set 1 lvm on
        fi

        echo "Probing partitions ..."
        partprobe
        for delay in $(seq 1 4) ; do
            sleep $delay
            test -b "${disk}1" && break
        done
    done

    if [ "$ENABLE_MD" -eq "1" ]; then
        echo "Creating MD device /dev/md0 ..."
        yes | mdadm --create "$MD_DEVICE" --level="$MD_LEVEL" --chunk="$MD_CHUNK" --raid-devices="$partitions_count" ${partitions_list[*]}

        echo "Storing MD device configuration ..."
        sed -i '/^# Begin of ephemeral-scripts configuration/,/^# End of ephemeral-scripts configuration/{d}' "$MD_CONFIG"
        {
            echo "# Begin of ephemeral-scripts configuration" ;
            mdadm --detail --scan >> "$MD_CONFIG" ;
            echo "# End of ephemeral-scripts configuration" ;
        } >> "$MD_CONFIG"

        echo "Creating LVM PV $MD_DEVICE ..."
        pvcreate -f "$MD_DEVICE"

        echo "Creating LVM VG $VG_NAME ..."
        vgcreate -f "$VG_NAME" "$MD_DEVICE"
    else
        echo "Creating LVM PV(s) ${partitions_list[*]} ..."
        pvcreate -fy ${partitions_list[*]}

        echo "Creating LVM VG $VG_NAME ..."
        vgcreate -f "$VG_NAME" ${partitions_list[*]}
    fi

    if [ "$ENABLE_SWAP" -eq "1" ] && [ "$LV_SWAP_SIZE" != 0 ]; then
        if [ "$LV_SWAP_SIZE" = MEMSIZE ]; then
            MEMSIZE=$(free -m | awk '/Mem:/{print $2}')
            LV_SWAP_SIZE="${MEMSIZE}M"
            echo "Setting LVM Swap size = $LV_SWAP_SIZE"
        fi

        echo "Creating LVM LV $VG_NAME/$LV_SWAP ..."
        lvcreate --yes -L "$LV_SWAP_SIZE" -n "$LV_SWAP" "$VG_NAME"

        echo "Formating swap partition ..."
        mkswap -f "/dev/$VG_NAME/$LV_SWAP"
    fi

    echo "Creating LVM LV $VG_NAME/$LV_DATA ..."
    lvcreate --yes -l "$LV_DATA_EXTENTS" -n "$LV_DATA" "$VG_NAME"

    echo "Formating data partition ..."
    sh -c "mkfs.$MOUNT_FSTYPE -L ephemeral-data -m 0 -F \"/dev/$VG_NAME/$LV_DATA\""
fi

if [ "$ENABLE_SWAP" -eq "1" ]; then
    echo "Activating swap ..."
    swapon "/dev/$VG_NAME/$LV_SWAP"
fi

pvscan -v --cache --activate ay || true

echo "Creating data mountpoint ..."
mkdir -p "$MOUNT_PATH"
